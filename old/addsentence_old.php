<script type='text/javascript'>
function addSentenceValidator(){
	return true;
}
function addWordToCurList(sentenceEntryForm){
//The length of this statement is a messy adjustment to the fact that our selection list's NAMES are human-readable but their VALUES are ID's.
	sentenceEntryForm.containsWords.value += sentenceEntryForm.wordToAdd.options[sentenceEntryForm.wordToAdd.selectedIndex].text + "*";
}
</script>

<?php
//Page for Entry of a Sentence
require_once ('formdisplayhelperfunctions.php');
$link = connectToDB();
echo "<h1>Enter a new sentence</h1>";
require_once ('navheader.php');


//load pre-existing data into globals for list presentation
$words = getExistingWords();###!!!THIS DOES NOT ACCOUNT FOR WORDS WITH THE SAME DESCRIPTION.  FIX OR SUFFER!!!
$types = getExistingSentenceTypes();

//###########################MAIN LOGIC###################
if ($_POST['_submit_check']){
	//We now validate server-side that the submission is correct before processing; if it is not, we show the user the form again with an error message
	if(true){
		//process the submitted data
		process_form();
	}
	else{
		$errorMessage = "A problem has occurred due to the data in your submission.  Please recheck and resubmit.";
		show_form($errorMessage);
	}
		
}
else{
	// The form wasn't submitted, so display
	show_form("");
}
//###################################END MAIN LOGIC####################################

function show_form($errorMessage){
?>

<form method="POST" action="<?php print $_SERVER['PHP_SELF']; ?>" onsubmit='return addSentenceValidator()'>

<table>
<tr><td>Spoken form:</td>
<td><?php input_text('sentenceSpokenForm', $_POST['sentenceSpokenForm']) ?></td></tr>
<tr><td>Close Gloss:</td>
<td><?php input_text('sentenceCloseGloss', $_POST['sentenceCloseGloss']) ?></td></tr>
<tr><td>Additional notes:</td>
<td><?php input_text('sentenceDescription', $_POST['sentenceDescription']) ?></td></tr>
<tr><td>Free translation:</td>
<td><?php input_text('sentenceFreeTranslation', $_POST['sentenceFreeTranslation']) ?></td></tr>
<tr><td>Sentence type:</td>
<td><?php input_select_reversed('sentenceType', $_POST['sentenceType'], $GLOBALS['types']); //BUG: When set to NONE, this does not repopulate correctly after rejected submission?></td></tr> 
</tr>
<tr><td colspan="2" align="center"><?php input_submit('sentenceAdd','Add Sentence'); ?>
</td></tr>
</table>

<input type="hidden" name="_submit_check" value="1"/>

</form>
<?php 
print $errorMessage;
}

function process_form(){
	mysql_query("BEGIN");
	//First we update the sentence table with the easy stuff
	$sentenceInsertQuery = "INSERT INTO sentence (spokenForm, closeGloss, sentenceDescription, freeTranslation, sentenceTypeID) VALUES('".
		mysql_real_escape_string($_POST['sentenceSpokenForm'])."','".
		mysql_real_escape_string($_POST['sentenceCloseGloss'])."','".
		mysql_real_escape_string($_POST['sentenceDescription'])."','".
		mysql_real_escape_string($_POST['sentenceFreeTranslation'])."',".
		max(mysql_real_escape_string($_POST['sentenceType']), -1) .")";
	if(!$result = mysql_query($sentenceInsertQuery)){echo ('Query failed: ' . mysql_error()); mysql_query("ROLLBACK"); die();}
	$sentenceInsertID = mysql_fetch_array(mysql_query("SELECT LAST_INSERT_ID()"));
			//Done.  Now we run through each word description, look up its ID (or find that it doesn't have one and enter a new autogenerated word), and insert a corresponding row into sentence_word
			//We must turn the user-friendly 'sentenceSpokenForm' value back into meaningful ID's
	$wordString = $_POST['sentenceSpokenForm'];
	if(strlen($wordString) > 0){
		$wordString = trim($wordString, " ");
		$wordDescs = explode(" ", $wordString);
		$sequenceNumber = 0;//iterator
		foreach($wordDescs as $key => $desc){
		$wordExistsResult = mysql_query("SELECT wordID FROM word WHERE wordWrittenForm LIKE '" . $desc ."'");
			if(mysql_num_rows($wordExistsResult) < 1){
				//we must insert an autogen word (bare minimum info) since this word appears not to exist yet
				$wordInsertQuery = "INSERT INTO word (wordWrittenForm, rootID, lexicalCategoryID) VALUES('".
					mysql_real_escape_string($desc)."',-1,-1)";
					if(!$result = mysql_query($wordInsertQuery)){ echo ('Query failed: ' . mysql_error()); mysql_query("ROLLBACK"); die();}
				$idToInsert = mysql_fetch_array(mysql_query("SELECT LAST_INSERT_ID()"));
			}
			//else if (mysql_num_rows($wordExistsResult) > 1){print "Error: Two or more words with same written form! Logic must be developed to address this case.";}
			else{
				//we will link the existing word to the sentence via sentence_word
				$wordRow = mysql_fetch_array($wordExistsResult);
				$idToInsert[0]=$wordRow['wordID'];
			}
			$sentence_wordInsertQuery = "INSERT INTO sentence_word (sentenceID, wordID, wordSequenceNumber) VALUES (".
			$sentenceInsertID[0].",".
			$idToInsert[0].",".
			mysql_real_escape_string($sequenceNumber).")";
			$sequenceNumber++;
			if(!$result = mysql_query($sentence_wordInsertQuery)){echo ('Query failed: ' . mysql_error()); mysql_query("ROLLBACK"); die();} 
		}
	}
	mysql_query("COMMIT");
	print "Sentence successfully inserted.";
}